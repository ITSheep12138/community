<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community.dao.MessageMapper">
    <!--查询的SQL字段-->
    <sql id="selectFields">
        id,from_id,to_id,conversation_id,content,status,create_time
    </sql>
    <!-- 插入的SQL字段-->
    <sql id="insertFields">
        from_id,to_id,conversation_id,content,status,create_time
    </sql>

    <!--分页查询会话的列表，按照最大的id（说明这个数据最新）降序，这样最新的数据就可以显示在最前面，-->
    <select id="getMessageList" resultType="Message">
        select <include refid="selectFields"></include>
        from message where id in (
            SELECT MAX(id) FROM message
            WHERE from_id != 1
            and status != 2
            and (from_id = #{userId} or to_id = #{userId})
            GROUP BY conversation_id
        )
        order by id desc
        limit #{offset},#{limit}
    </select>

    <!--查询一共有多少个会话-->
    <select id="getMessageCount" resultType="int">
        select count(id)
        from message where id in (
            SELECT MAX(id) FROM message
            WHERE from_id != 1
            and status != 2
            and (from_id = #{userId} or to_id = #{userId})
            GROUP BY conversation_id
        )
    </select>

    <!--分页查询某个会话的消息列表-->
    <select id="getLetters" resultType="Message">
        select <include refid="selectFields"></include>
        from message where from_id != 1
        and status != 2
        and conversation_id = #{conversationId}
        order by create_time desc
        limit #{offset},#{limit}
    </select>

    <!--查询某个会话的消息数量-->
    <select id="getLetterCount" resultType="int">
        select count(id)
        from message where from_id != 1
        and status != 2
        and conversation_id = #{conversationId}
    </select>

    <!--查询会话的未读数量-->
    <select id="getLetterCountUnRead" resultType="int">
        select count(id)
        from message where from_id != 1
        and to_id = #{userId}
        and status = 0
        <if test="conversationId != null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <!--查询主题的最新通知-->
    <select id="getLatestNotice" resultType="Message">
        select <include refid="selectFields"></include>
        from message where id in (
            SELECT MAX(id) FROM message
            WHERE from_id = 1
            and status != 2
            and to_id = #{userId}
            and conversation_id = #{topic}
        )
    </select>

    <!--分页查询某个主题的通知-->
    <select id="getNoticeDetailPage" resultType="Message">
        select <include refid="selectFields"></include>
        from message where from_id = 1
        and status != 2
        and to_id = #{userId}
        and conversation_id = #{topic}
        order by create_time desc
        limit #{offset},#{limit}
    </select>

    <!--查询某个主题的通知数量-->
    <select id="getNoticeCount" resultType="int">
        select count(id)
        from message where from_id = 1
        and to_id = #{userId}
        and status != 2
        and conversation_id = #{topic}
    </select>

    <!--查询某个主题的未读通知数量or所有未读数量-->
    <select id="getUnReadNoticeCount" resultType="int">
        select count(id)
        from message where from_id = 1
        and to_id = #{userId}
        and status = 0
        <if test="topic!=null">
            and conversation_id = #{topic}
        </if>
    </select>

    <!--插入消息-->
    <insert id="insertMessage" parameterType="Message">
        insert into message(<include refid="insertFields"></include>)
        values (#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <!--更新未读-->
    <update id="updateMessage" parameterType="Integer">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>

    </update>

</mapper>
